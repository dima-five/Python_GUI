from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox


class Ui_MainWindow(object):

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(360, 500)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_result = QtWidgets.QLabel(self.centralwidget)
        self.label_result.setGeometry(QtCore.QRect(0, 0, 360, 60))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.label_result.setFont(font)
        self.label_result.setStyleSheet("background-color: rgb(217, 213, 255);")
        self.label_result.setObjectName("label_result")
        self.Button_0 = QtWidgets.QPushButton(self.centralwidget)
        self.Button_0.setGeometry(QtCore.QRect(0, 380, 130, 90))
        self.Button_0.setStyleSheet("background-color: rgb(255, 151, 158);")
        self.Button_0.setObjectName("Button_0")
        self.Button_Equal = QtWidgets.QPushButton(self.centralwidget)
        self.Button_Equal.setGeometry(QtCore.QRect(130, 380, 140, 90))
        self.Button_Equal.setStyleSheet("background-color: rgb(214, 255, 179);")
        self.Button_Equal.setObjectName("Button_Equal")
        self.Button_1 = QtWidgets.QPushButton(self.centralwidget)
        self.Button_1.setGeometry(QtCore.QRect(0, 290, 90, 90))
        self.Button_1.setStyleSheet("background-color: rgb(170, 170, 127);")
        self.Button_1.setObjectName("Button_1")
        self.Button_2 = QtWidgets.QPushButton(self.centralwidget)
        self.Button_2.setGeometry(QtCore.QRect(90, 290, 90, 90))
        self.Button_2.setStyleSheet("background-color: rgb(170, 170, 127);")
        self.Button_2.setObjectName("Button_2")
        self.Button_3 = QtWidgets.QPushButton(self.centralwidget)
        self.Button_3.setGeometry(QtCore.QRect(180, 290, 90, 90))
        self.Button_3.setStyleSheet("background-color: rgb(170, 170, 127);")
        self.Button_3.setObjectName("Button_3")
        self.Button_4 = QtWidgets.QPushButton(self.centralwidget)
        self.Button_4.setGeometry(QtCore.QRect(0, 200, 90, 90))
        self.Button_4.setStyleSheet("background-color: rgb(170, 170, 127);")
        self.Button_4.setObjectName("Button_4")
        self.Button_5 = QtWidgets.QPushButton(self.centralwidget)
        self.Button_5.setGeometry(QtCore.QRect(90, 200, 90, 90))
        self.Button_5.setStyleSheet("background-color: rgb(170, 170, 127);")
        self.Button_5.setObjectName("Button_5")
        self.Button_6 = QtWidgets.QPushButton(self.centralwidget)
        self.Button_6.setGeometry(QtCore.QRect(180, 200, 90, 90))
        self.Button_6.setStyleSheet("background-color: rgb(170, 170, 127);")
        self.Button_6.setObjectName("Button_6")
        self.Button_7 = QtWidgets.QPushButton(self.centralwidget)
        self.Button_7.setGeometry(QtCore.QRect(0, 110, 90, 90))
        self.Button_7.setStyleSheet("background-color: rgb(170, 170, 127);")
        self.Button_7.setObjectName("Button_7")
        self.Button_8 = QtWidgets.QPushButton(self.centralwidget)
        self.Button_8.setGeometry(QtCore.QRect(90, 110, 90, 90))
        self.Button_8.setStyleSheet("background-color: rgb(170, 170, 127);")
        self.Button_8.setObjectName("Button_8")
        self.Button_9 = QtWidgets.QPushButton(self.centralwidget)
        self.Button_9.setGeometry(QtCore.QRect(180, 110, 90, 90))
        self.Button_9.setStyleSheet("background-color: rgb(170, 170, 127);")
        self.Button_9.setObjectName("Button_9")
        self.Button_divide = QtWidgets.QPushButton(self.centralwidget)
        self.Button_divide.setGeometry(QtCore.QRect(270, 110, 90, 90))
        self.Button_divide.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Button_divide.setObjectName("Button_divide")
        self.Button_multiple = QtWidgets.QPushButton(self.centralwidget)
        self.Button_multiple.setGeometry(QtCore.QRect(270, 200, 90, 90))
        self.Button_multiple.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Button_multiple.setObjectName("Button_multiple")
        self.Button_subtract = QtWidgets.QPushButton(self.centralwidget)
        self.Button_subtract.setGeometry(QtCore.QRect(270, 290, 90, 90))
        self.Button_subtract.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Button_subtract.setObjectName("Button_subtract")
        self.Button_add = QtWidgets.QPushButton(self.centralwidget)
        self.Button_add.setGeometry(QtCore.QRect(270, 380, 90, 90))
        self.Button_add.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Button_add.setObjectName("Button_add")
        self.Button_percent = QtWidgets.QPushButton(self.centralwidget)
        self.Button_percent.setGeometry(QtCore.QRect(0, 60, 90, 50))
        self.Button_percent.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Button_percent.setObjectName("Button_percent")
        self.Button_clear_all = QtWidgets.QPushButton(self.centralwidget)
        self.Button_clear_all.setGeometry(QtCore.QRect(90, 60, 90, 50))
        self.Button_clear_all.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Button_clear_all.setObjectName("Button_clear_all")
        self.Button_clear_one_value = QtWidgets.QPushButton(self.centralwidget)
        self.Button_clear_one_value.setGeometry(QtCore.QRect(180, 60, 90, 50))
        self.Button_clear_one_value.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Button_clear_one_value.setObjectName("Button_clear_one_value")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(270, 60, 90, 50))
        self.pushButton.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.pushButton.setText("")
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.add_function()
        self.is_equal = False

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Calculator"))
        self.label_result.setText(_translate("MainWindow", "0"))
        self.Button_0.setText(_translate("MainWindow", "0"))
        self.Button_Equal.setText(_translate("MainWindow", "="))
        self.Button_1.setText(_translate("MainWindow", "1"))
        self.Button_2.setText(_translate("MainWindow", "2"))
        self.Button_3.setText(_translate("MainWindow", "3"))
        self.Button_4.setText(_translate("MainWindow", "4"))
        self.Button_5.setText(_translate("MainWindow", "5"))
        self.Button_6.setText(_translate("MainWindow", "6"))
        self.Button_7.setText(_translate("MainWindow", "7"))
        self.Button_8.setText(_translate("MainWindow", "8"))
        self.Button_9.setText(_translate("MainWindow", "9"))
        self.Button_divide.setText(_translate("MainWindow", "/"))
        self.Button_multiple.setText(_translate("MainWindow", "*"))
        self.Button_subtract.setText(_translate("MainWindow", "-"))
        self.Button_add.setText(_translate("MainWindow", "+"))
        self.Button_percent.setText(_translate("MainWindow", "%"))
        self.Button_clear_all.setText(_translate("MainWindow", "C"))
        self.Button_clear_one_value.setText(_translate("MainWindow", "<x"))

        # ======= function methods ======================
    def add_function(self):
        self.Button_0.clicked.connect(lambda: self.write_number(self.Button_0.text()))
        self.Button_1.clicked.connect(lambda: self.write_number(self.Button_1.text()))
        self.Button_2.clicked.connect(lambda: self.write_number(self.Button_2.text()))
        self.Button_3.clicked.connect(lambda: self.write_number(self.Button_3.text()))
        self.Button_4.clicked.connect(lambda: self.write_number(self.Button_4.text()))
        self.Button_5.clicked.connect(lambda: self.write_number(self.Button_5.text()))
        self.Button_6.clicked.connect(lambda: self.write_number(self.Button_6.text()))
        self.Button_7.clicked.connect(lambda: self.write_number(self.Button_7.text()))
        self.Button_8.clicked.connect(lambda: self.write_number(self.Button_8.text()))
        self.Button_9.clicked.connect(lambda: self.write_number(self.Button_9.text()))
        self.Button_add.clicked.connect(lambda: self.write_number(self.Button_add.text()))
        self.Button_subtract.clicked.connect(lambda: self.write_number(self.Button_subtract.text()))
        self.Button_divide.clicked.connect(lambda: self.write_number(self.Button_divide.text()))
        self.Button_multiple.clicked.connect(lambda: self.write_number(self.Button_multiple.text()))

        self.Button_Equal.clicked.connect(self.results)

    # def write_number(self, number):
    #     print(number)
    def write_number(self, number):
        if self.label_result.text() == '0' or self.is_equal:
            self.label_result.setText(number)
            self.is_equal = False
        else:
            self.label_result.setText(self.label_result.text() + number)

    def results(self):
        if not self.is_equal:
            res = eval(self.label_result.text())
            self.label_result.setText(f"RESULT: {res}")
            self.is_equal = True
        else:
            warning_win = QMessageBox()
            warning_win.setWindowTitle("Warning Window")
            warning_win.setText("'Equal' button is not clicked")
            warning_win.setIcon(QMessageBox.Warning)
            warning_win.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)

            warning_win.setDefaultButton(QMessageBox.Ok)

            warning_win.exec_()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
